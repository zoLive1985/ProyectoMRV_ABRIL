//
// Component: Divider
//
// ========================================================================


// Variables
// ========================================================================

//
// New
//

@internal-divider-small-border-gradient:       ;

@internal-divider-small-image:                 ;


// Icon
// ========================================================================

.hook-divider-icon() {}

.hook-divider-icon-line() {}

.hook-divider-icon-line-left() {}

.hook-divider-icon-line-right() {}


// Small
// ========================================================================

.hook-divider-small() {}

.hook-divider-small() when not (@internal-divider-small-border-gradient = ~'') and (@internal-divider-small-image = ~'') {
    border-image: @internal-divider-small-border-gradient;
    border-image-slice: 1;
}

.hook-divider-small() when not (@internal-divider-small-image = ~'') and (@internal-divider-small-border-gradient = ~'') {
    .svg-fill(@internal-divider-small-image, "#000", @divider-small-border);
    border-color: transparent;
}


// Vertical
// ========================================================================

.hook-divider-vertical() {}


// Miscellaneous
// ========================================================================

.hook-divider-misc() {}


// Inverse
// ========================================================================

.hook-inverse-divider-icon() {}
.hook-inverse-divider-icon-line() {}

.hook-inverse-divider-small() when not (@internal-divider-small-border-gradient = ~'') and (@internal-divider-small-image = ~'') {
    border-image: none;
}

.hook-inverse-divider-small() when not (@internal-divider-small-image = ~'') and (@internal-divider-small-border-gradient = ~'') {
    .svg-fill(@internal-divider-small-image, "#000", @inverse-divider-small-border);
    border-color: transparent;
}

.hook-inverse-divider-vertical() {}